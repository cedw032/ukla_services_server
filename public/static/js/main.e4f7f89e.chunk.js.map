{"version":3,"sources":["content/logo.png","logo.svg","views/CreateUser.js","views/MainMenu.js","views/UploadEnrolment.js","views/EnterMarks.js","views/PrintReports.js","styled_components/FormInput.js","styled_components/Logo.js","views/Login.js","App.js","provideApi.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CreateUser","_this","this","_ref","state","_ref$username","username","_ref$password","password","_ref$p","p2","error","post","props","api","react_default","a","createElement","className","type","value","onChange","_ref2","target","setState","_ref3","_ref4","children","onClick","then","result","catch","Component","MainMenu","navigate","UploadEnrolment","EnterMarks","PrintReports","FormInput","_this$props","classNames","label","cx","text","Logo","src","logo","style","width","Login","onLogin","Logo_Logo","FormInput_FormInput","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","token","localStorage","setItem","path","getItem","_this$state","viewProps","route","payload","Promise","resolve","reject","axios","getUrl","data","status","console","message","e","get","log","currentView","mainMenu","MainMenu_MainMenu","createUser","CreateUser_CreateUser","uploadEnrolment","UploadEnrolment_UploadEnrolment","enterMarks","EnterMarks_EnterMarks","printReports","PrintReports_PrintReports","Login_Login","assign","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4f7f89e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.21355790.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nexport default class CreateUser extends Component {\n\n\trender() {\n\t\tconst {\n\t\t\tusername = '', \n\t\t\tpassword = '',\n\t\t\tp2 = '',\n\t\t\terror,\n\t\t} = this.state || {};\n\n\t\tconst {post} = this.props.api;\n\n\t\treturn (\n\t\t\t<div className=\"create-user\">\n\t\t\t\t<span>username</span>\n\t\t\t\t<input type='text' \n\t\t\t\t\tvalue={username}\n\t\t\t\t\tonChange={({target: {value}}) => {\n\t\t\t\t\t\tthis.setState({username: value});\n\t\t\t\t\t}} />\n\t\t\t\t<span>password</span>\n\t\t\t\t<input type='text' \n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={({target: {value}}) => {\n\t\t\t\t\t\tthis.setState({password: value});\n\t\t\t\t\t}} />\n\t\t\t\t<span>confirm password</span>\n\t\t\t\t<input type='text' \n\t\t\t\t\tvalue={p2}\n\t\t\t\t\tonChange={({target: {value}}) => {\n\t\t\t\t\t\tthis.setState({p2: value});\n\t\t\t\t\t}} />\n\t\t\t\t<button children='Create User' \n\t\t\t\t\tonClick={ () => {\n\n\t\t\t\t\t\tif (!username || !password) {\n\t\t\t\t\t\t\tthis.setState({error: 'All fields require input'});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (password !== p2) {\n\t\t\t\t\t\t\tthis.setState({error: 'Passwords do not match'});\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpost('auth/register', this.state)\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\tthis.setState({error});\n\t\t\t\t\t\t});\n\t\t\t\t\t}} />\n\t\t\t\t{error && <span className='error'>{error}</span>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class MainMenu extends Component {\n\n\trender() {\n\t\tconst {navigate} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"main-menu\">\n\t\t\t\t<button onClick={() => navigate('uploadEnrolment')}>Upload Enrolment</button>\n\t\t\t\t<button onClick={() => navigate('enterMarks')}>Enter Marks</button>\n\t\t\t\t<button onClick={() => navigate('printReports')}>Print Reports</button>\n\t\t\t\t<button onClick={() => navigate('createUser')}>Create User</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class UploadEnrolment extends Component {\n\n\trender() {\n\t\tconst {navigate} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"upload-enrolment\">\n\t\t\t\tUpload Enrolment\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class EnterMarks extends Component {\n\n\trender() {\n\t\tconst {navigate} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"enter-marks\">\n\t\t\t\tEnter Marks\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\n\nexport default class PrintReports extends Component {\n\n\trender() {\n\t\tconst {navigate} = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"print-reports\">\n\t\t\t\tPrint Reports\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, {Component} from 'react';\nimport cx from 'classnames';\n\nexport default class FormInput extends Component {\n\trender() {\n\t\tconst {\n\t\t\tclassNames,\n\t\t\tlabel,\n\t\t\tonChange,\n\t\t\tvalue,\n\t\t\ttype\n\t\t} = this.props\n\n\t\treturn (\n\t\t\t<div className={cx('form-input', classNames)}>\n\t\t\t\t<span>{label}</span>\n\t\t\t\t{{\n\t\t\t\t\ttext: <input type='text' value={value} onChange={onChange} />,\n\t\t\t\t\tpassword: <input type='password' value={value} onChange={onChange} />,\n\t\t\t\t}[type]}\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, {Component} from 'react';\nimport logo from '../content/logo.png';\n\nexport default class Logo extends Component {\n\trender () {\n\t\treturn <img src={logo} style={{width: 100}} />;\n\t}\n}","import React, { Component } from 'react';\nimport FormInput from '../styled_components/FormInput'\nimport Logo from '../styled_components/Logo';\n\nexport default class Login extends Component {\n\n\trender() {\n\t\tconst {\n\t\t\tusername = '', \n\t\t\tpassword = '',\n\t\t\terror,\n\t\t} = this.state || {};\n\n\t\tconst {\n\t\t\tapi,\n\t\t\tonLogin \n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<div className='login-view'>\n\t\t\t\t<div className='panel'>\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tlabel='user'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={({target: {value}}) => {\n\t\t\t\t\t\t\tthis.setState({username: value});\n\t\t\t\t\t\t}} />\n\t\t\t\t\t<FormInput \n\t\t\t\t\t\tlabel='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={({target: {value}}) => {\n\t\t\t\t\t\t\tthis.setState({password: value});\n\t\t\t\t\t\t}} />\n\t\t\t\t\t<button children='next' \n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tapi.post('auth/login', this.state)\n\t\t\t\t\t\t\t.then(onLogin).catch((error) => {\n\t\t\t\t\t\t\t\tthis.setState({error});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}} />\n\t\t\t\t\t{error && <span className='error'>{error}</span>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CreateUser from './views/CreateUser';\nimport MainMenu from './views/MainMenu';\nimport UploadEnrolment from './views/UploadEnrolment';\nimport EnterMarks from './views/EnterMarks';\nimport PrintReports from './views/PrintReports';\nimport Login from './views/Login';\nimport provideApi from './provideApi';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttoken: localStorage.getItem('token'),\n\t\t\tpath: 'mainMenu',\n\t\t};\n\t}\n\n\tonLogin = (token) => {\n\t\tlocalStorage.setItem('token', token);\n\t\tthis.setState({token});\n\t}\n\n\tnavigate = (path) => {\n\t\tthis.setState({path});\n\t}\n\n\trender() {\n\n\t\tconst {\n\t\t\tstate: {\n\t\t\t\ttoken,\n\t\t\t\tpath,\n\t\t\t},\n\t\t\tonLogin,\n\t\t\tnavigate,\n\t\t} = this;\n\n\t\tconst viewProps = {\n\t\t\tapi: provideApi(token), \n\t\t\tnavigate,\n\t\t}\n\n\t\tconsole.log('VP', viewProps);\n\n\t\tconst currentView = token ? {\n\t\t\tmainMenu: <MainMenu {...viewProps} />,\n\t\t\tcreateUser: <CreateUser {...viewProps} />,\n\t\t\tuploadEnrolment: <UploadEnrolment {...viewProps} />,\n\t\t\tenterMarks: <EnterMarks {...viewProps} />,\n\t\t\tprintReports: <PrintReports {...viewProps} />,\n\t\t}[path] : <Login onLogin={onLogin} {...viewProps} />\n\n\t\treturn <div className=\"app\">{ currentView }</div>;\n\t}\n}\nexport default App;\n","import axios from 'axios'\nimport config from './config'\n\nexport default function provideApi(token) {\n\n\tconst getUrl = (route) => {\n\t\tconst base = config().isDev ? 'http://localhost:5000/' : 'https://still-hollows-65231.herokuapp.com/';\n\t\tconst url = base + route; \n\t\treturn url;\n\t}\n\n\treturn {\n\t\tpost: (route, payload) => {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\taxios.post(getUrl(route), payload)\n\t\t\t\t.then((result) => {\n\t\t\t\t\tif (result.data.status === 'success') {\n\t\t\t\t\t\tresolve(result.data.data);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.error(result.data.message);\n\t\t\t\t\treject(result.data.message);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e.message);\n\t\t\t\t\treject(e.message);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\n\t\tget: (route, payload) => {\n\n\t\t},\n\t};\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}